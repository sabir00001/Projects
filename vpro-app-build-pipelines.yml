# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
- master

resources:
- repo: self

variables:
  # Container registry service connection established during pipeline creation
  dockerRegistryServiceConnection: '9734dba5-b9e0-4249-9973-b3fb22b06d24'
  imageRepository: 'vproapp'
  containerRegistry: 'mafacr01.azurecr.io'
  dockerfilePath: '$(Build.SourcesDirectory)/vpro-app/docker-compose.yaml'
  tag: '$(Build.BuildId)'

   # Agent VM image name
  Name: devops-agent-01

stages:
- stage: App_Build
  displayName: 'Vpro_App_Build'
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(Name)
    steps:
    - task: SonarQubePrepare@5
      condition: false
      inputs:
        SonarQube: 'Sonar-Connection'
        scannerMode: 'Other'
    - task: SonarCloudPrepare@1
      inputs:
        SonarCloud: 'sonar-cloud'
        organization: 'vrpoapp'
        scannerMode: 'Other'

    - task: CmdLine@2
      displayName: 'Vpro Build'
      inputs:
        script: |
          mvn install
        workingDirectory: '$(Build.SourcesDirectory)/vpro-app/Code'
    - task: CmdLine@2
      displayName: 'Vpro Test'
      inputs:
        script: |
          mvn test && 
          mvn checkstyle:checkstyle
        workingDirectory: '$(Build.SourcesDirectory)/vpro-app/Code'
    - task: Maven@4
      displayName: 'MVN Sonar-Analyis'
      condition: false
      inputs:
        mavenPomFile: '$(Build.SourcesDirectory)/vpro-app/Code/pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        testRunTitle: 'Maven-Unit-Test'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: true
        sqMavenPluginVersionChoice: 'latest'
        checkStyleRunAnalysis: true
    - task: SonarQubeAnalyze@5
      condition: false
      inputs:
        jdkversion: 'JAVA_HOME_11_X64'
    - task: SonarCloudAnalyze@1
      inputs:
        jdkversion: 'JAVA_HOME'
 
    - task: SonarQubePublish@5
      condition: false
      inputs:
        pollingTimeoutSec: '300'
    
    - task: SonarCloudPublish@1
      inputs:
        pollingTimeoutSec: '300'
    
    

- stage: Docker_Build
  displayName: 'Docker Build'
  jobs:
  - job: Build
    displayName: Build
    pool:
      name: $(Name)
    steps:
    - task: DockerCompose@0
      displayName: 'DockerCompose-build'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'azure-learn'
        azureContainerRegistry: '{"loginServer":"mafacr01.azurecr.io", "id" : "/subscriptions/9734dba5-b9e0-4249-9973-b3fb22b06d24/resourceGroups/aks-rg-acr/providers/Microsoft.ContainerRegistry/registries/mafacr01"}'
        dockerComposeFile: '$(dockerfilePath)'
        projectName: 'vpro-app'
        action: 'Build services'
        additionalImageTags: '$(Build.BuildId)'
        includeSourceTags: true

- stage: Docker_Push
  displayName: 'Publish'
  jobs:
  - job: Build
    displayName: publish
    pool:
      name: $(Name)
    steps:
    - task: DockerCompose@0
      displayName: 'DockerCompose-push'
      inputs:
        containerregistrytype: 'Azure Container Registry'
        azureSubscription: 'azure-learn'
        azureContainerRegistry: '{"loginServer":"mafacr01.azurecr.io", "id" : "/subscriptions/9734dba5-b9e0-4249-9973-b3fb22b06d24/resourceGroups/aks-rg-acr/providers/Microsoft.ContainerRegistry/registries/mafacr01"}'
        dockerComposeFile: '$(dockerfilePath)'
        projectName: 'vpro-app'
        action: 'Push services'
        additionalImageTags: '$(Build.BuildId)'
        includeSourceTags: true
